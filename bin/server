#!/usr/bin/env bash
#
# Author:
#   Nicolas Gallagher (@necolas)
#   Ben Alman (@cowboy)
#
# Description:
#   Start an HTTP server from a directory, optionally specifying the port
#
# Dependencies:
#   PHP 5.4.0+
#   Python
#
# Configuration:
#   @param   file    required
#
# Usage:
#   `create-server [php | [py|python]]`
#

_create-server() {
	local usage="$(basename $0): usage: $(basename $0) [-h|--help] [$(tput smul)php | [py|python]$(tput rmul)]"
	local opt port ip
	local type="$1"

	# Test for known flags
	for opt in $@
	do
		case $opt in
			-h|--help)
				printf "%s\n" "${usage}"
				exit
				;;
			# test for an invalid flag, exit if not a valid flag
			-*|--*)
				printf "%s: usage: %s: invalid option\n%s\n" "$(basename "$0")" "$opt" "${usage}"
				exit 1
				;;
		esac
	done

	if [[ ! "${type}" ]]; then 
		printf "bash: %s: No type specified\n" "$(basename "$0")"
		exit 1; 
	fi

	if [[ "${type}" != 'php' ]] && [[ ${type} != 'py' || ${type} != 'python' ]] && [[ ${type} != 'jekyll' ]]; then
		printf "%s: %s: Not a valid server type\n" "$(basename "$0")" "${type}"
		exit 1; 
	fi

	if [[ ${type} == 'py' ]] || [[ ${type} == 'python' ]]; then
		# Get port (if specified)
		port="8000"

		# Open in the browser
		open "http://localhost:${port}/"

		# Redefining the default content-type to text/plain instead of the default
		# application/octet-stream allows "unknown" files to be viewable in-browser
		# as text instead of being downloaded.
		#
		# Unfortunately, "python -m SimpleHTTPServer" doesn't allow you to redefine
		# the default content-type, but the SimpleHTTPServer module can be executed
		# manually with just a few lines of code.
		python -c $'import SimpleHTTPServer;\nSimpleHTTPServer.SimpleHTTPRequestHandler.extensions_map[""] = "text/plain";\nSimpleHTTPServer.test();' "$port"
	fi

	if [[ ${type} == 'php' ]]; then
		# Start a PHP server from a directory, optionally specifying the port
		port="4000"
		ip=$(ipconfig getifaddr en0)
		sleep 1 && open "http://${ip}:${port}/" &
		php -S "${ip}:${port}"
	fi

	if [[ ${type} == 'jekyll' ]]; then
		if ! type -P 'bundle' &> /dev/null; then
			printf "%sâŠ˜ Error:%s jekyll is required to run %s\n" "$(tput setaf 1)" "$(tput sgr0)" "$(basename $0)"
			printf "Aborting!\n"
		else
			bundle exec jekyll serve --watch
		fi
	fi
}

_create-server "$@"
